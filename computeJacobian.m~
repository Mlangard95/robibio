function [outputArg1,outputArg2] = computeJacobian(inputArg1,inputArg2)
    %% Initialize Jacobian
    jacobian = zeros(3,5);
    
    
    %% Hip
    J = -cross (motors.unitVectors.hip(1:3), motors.leverVectors.hip(1:3));
    jacobian(3,5) = J(3);
    
    
    %% Knee
    J = -cross (motors.unitVectors.knee(1:3), motors.leverVectors.knee(1:3));
    jacobian(2,3) = J(3);
        
    
    %% Ankle
    J = -cross (motors.unitVectors.ankle(1:3), motors.leverVectors.ankle(1:3));
    jacobian(1,1) = J(3);
    

    
    %% Hip-Knee       
    J = -cross (motors.unitVectors.hip_knee(1:3), motors.leverVectors.hip_knee.hip(1:3));
    jacobian(3,4) = J(3);
    J = -cross (motors.unitVectors.hip_knee(1:3), motors.leverVectors.hip_knee.knee(1:3));
    jacobian(2,4) = J(3);
    
    %% Knee-Ankle
    J = -cross (motors.unitVectors.knee_ankle(1:3), motors.leverVectors.knee_ankle.knee(1:3));
    jacobian(2,2) = J(3);
    J = -cross (motors.unitVectors.knee_ankle(1:3), motors.leverVectors.knee_ankle.ankle(1:3));
    jacobian(1,2) = J(3);
end

